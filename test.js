// Generated by CoffeeScript 2.7.0
(function() {
  var conf, data, foo, hi, name, test, testAsync, type, util, val;

  util = require('util');

  // 定义函数
  hi = function() {
    return console.log('hello');
  };

  // 调用函数
  hi();

  // 定义带参函数
  foo = function(score) {
    if (score > 80) {
      return console.log('good');
    } else {
      return console.log('bad');
    }
  };

  // 带参调用
  foo(90);

  // 变量插值
  name = 'alice';

  console.log(`hello ${name}！`);

  
async function hellofn() {
    console.log('hellofn: calling..')
    return new Promise(resolve => {
        setTimeout(resolve, 1000, 'hellofn: await done.')
    })
}

async function see() {
    let data = await hellofn()
    console.log(data);
    
}
    // 回退到js，定义方法
;

  // 调用js方法
  see();

  // coffee 定义async方法
  testAsync = async function() {
    return (await Promise.resolve('good-job'));
  };

  conf = true;

  test = async function(val) {
    var count, data;
    console.log(util.inspect(data, {
      colors: true,
      depth: null
    }));
    if (!conf) {
      return 'good';
    }
    if (typeof val === 'string') {
      console.log('fine');
    }
    if (val > 10) {
      return true;
    }
    data = (await testAsync());
    console.log(data);
    count = 10;
    return val = count > 10 ? 'yes' : 'no';
  };

  // util.hello 'lily'
  //     .say 'nice to meet you'
  test();

  // 定义对象
  type = 'string';

  val = 'hello';

  data = {
    type: type,
    val: val
  };

  console.log(data);

}).call(this);
